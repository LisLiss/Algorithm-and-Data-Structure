<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="92cdf8090c10c488e95e1afbec74a5f2">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sdk.js" async="" crossorigin="anonymous"></script><script type="text/javascript" async="" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ga.js"></script><script id="facebook-jssdk" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sdk_002.js"></script><script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery-1.js"></script>
    <script type="application/javascript">
        window.standaloneContest = false;
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="f1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="//st.codeforces.com/s/52128/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/52128/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/css.css" rel="stylesheet" type="text/css">
        <link href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/52128/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_003.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/groups.css" type="text/css" charset="utf-8">

    <!-- MathJax -->
    <script type="text/x-mathjax-config;executed=true">
    MathJax.Hub.Config({
      tex2jax: {inlineMath: [['$$$','$$$']], displayMath: [['$$$$$$','$$$$$$']]}
    });
    </script>
    <script type="text/javascript" async="" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/MathJax.js">
    </script>
    <!-- /MathJax -->

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/prettify.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/moment-with-locales.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/pushstream.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_010.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_007.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_008.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_012.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/facebox.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_002.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_006.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_011.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_009.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_005.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_003.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/clipboard.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/autosize.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sjcl.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces-options.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/EventCatcher.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/preparedVerdictFormats-ru.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style_003.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_004.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_013.js"></script>
        <script src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/openapi.js" type="text/javascript"></script>

<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax.MathJax_FullWidth {text-align: center; display: table-cell!important; width: 10000em!important}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none; box-sizing: content-box}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_test {font-style: normal; font-weight: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow: hidden; height: 1px}
.MathJax_test.mjx-test-display {display: table!important}
.MathJax_test.mjx-test-inline {display: inline!important; margin-right: -1px}
.MathJax_test.mjx-test-default {display: block!important; clear: both}
.MathJax_ex_box {display: inline-block!important; position: absolute; overflow: hidden; min-height: 0; max-height: none; padding: 0; border: 0; margin: 0; width: 1px; height: 60ex}
.MathJax_em_box {display: inline-block!important; position: absolute; overflow: hidden; min-height: 0; max-height: none; padding: 0; border: 0; margin: 0; width: 1px; height: 60em}
.mjx-test-inline .MathJax_left_box {display: inline-block; width: 0; float: left}
.mjx-test-inline .MathJax_right_box {display: inline-block; width: 0; float: right}
.mjx-test-display .MathJax_right_box {display: table-cell!important; width: 10000em!important; min-width: 0; max-width: none; padding: 0; border: 0; margin: 0}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf?V=2.7.5') format('opentype'); font-weight: bold}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf?V=2.7.5') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Math; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf?V=2.7.5') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Caligraphic; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf?V=2.7.5') format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_dialog_advanced{border-radius:8px;padding:10px}.fb_dialog_content{background:#fff;color:#373737}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{left:5px;right:auto;top:5px}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{height:100%;left:0;margin:0;overflow:visible;position:absolute;top:-10000px;transform:none;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{background:none;height:auto;min-height:initial;min-width:initial;width:auto}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{clear:both;color:#fff;display:block;font-size:18px;padding-top:20px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .4);bottom:0;left:0;min-height:100%;position:absolute;right:0;top:0;width:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_mobile .fb_dialog_iframe{position:sticky;top:0}.fb_dialog_content .dialog_header{background:linear-gradient(from(#738aba), to(#2c4987));border-bottom:1px solid;border-color:#1d3c78;box-shadow:white 0 1px 1px -1px inset;color:#fff;font:bold 14px Helvetica, sans-serif;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:linear-gradient(from(#4267B2), to(#2a4887));background-clip:padding-box;border:1px solid #29487d;border-radius:3px;display:inline-block;line-height:18px;margin-top:3px;max-width:85px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{background:none;border:none;color:#fff;font:bold 12px Helvetica, sans-serif;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #4a4a4a;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f5f6f7;border:1px solid #4a4a4a;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-position:50% 50%;background-repeat:no-repeat;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}</style></head>
<body><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px none; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"></div></div><div id="MathJax_Message" style="display: none;"></div><div id="vk_api_transport" style="position: absolute; top: -10000px;"></div><span style="display:none;" class="csrf-token" data-csrf="92cdf8090c10c488e95e1afbec74a5f2">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>
<div class="verdictPrototypeDiv" style="display: none;"></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    window.fbAsyncInit = function() {
        FB.init({
            appId      : '554666954583323',
            xfbml      : true,
            version    : 'v2.8'
        });
        FB.AppEvents.logPageView();
    };

    (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "Forlis";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        //info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        // console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }

    function showEventCatcherUserMessage(json) {
        if (json.t == "s") {
            var points = json.d[5];
            var passedTestCount = json.d[7];
            var judgedTestCount = json.d[8];
            var verdict = preparedVerdictFormats[json.d[12]];
            var verdictPrototypeDiv = $(".verdictPrototypeDiv");
            verdictPrototypeDiv.html(verdict);
            if (judgedTestCount != null && judgedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-judged").text(judgedTestCount);
            }
            if (passedTestCount != null && passedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-passed").text(passedTestCount);
            }
            if (points != null && points != undefined) {
                verdictPrototypeDiv.find(".verdict-format-points").text(points);
            }
            Codeforces.showMessage(verdictPrototypeDiv.text());
        }
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();

    //Codeforces.initializePubSub();
    if (window.codeforcesOptions.subscribeServerUrl) {
        window.eventCatcher = new EventCatcher(
            window.codeforcesOptions.subscribeServerUrl,
            [
                Codeforces.getGlobalChannel(),
                Codeforces.getUserChannel(),
                Codeforces.getUserShowMessageChannel(),
                Codeforces.getContestChannel(),
                Codeforces.getParticipantChannel(),
                Codeforces.getTalkChannel()
            ]
        );

        if (Codeforces.getParticipantChannel()) {
            window.eventCatcher.subscribe(Codeforces.getParticipantChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getContestChannel()) {
            window.eventCatcher.subscribe(Codeforces.getContestChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getGlobalChannel()) {
            window.eventCatcher.subscribe(Codeforces.getGlobalChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserShowMessageChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserShowMessageChannel(), function(json) {
                showEventCatcherUserMessage(json);
            });
        }
    }

    Codeforces.setupContestTimes("/group/CYMPFXi8zA/data/contests");
    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;" class="compact-problemset">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                  <a href="http://codeforces.com/"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/group/CYMPFXi8zA/contest/232787/problems?locale=en"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/group/CYMPFXi8zA/contest/232787/problems?locale=ru"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Лабораторная работа 1-2. Стек, очередь, СНМ</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

    <div class="problem-frames">
        <div style="margin-bottom: 2em;">

    <style>
        .input-output-copier {
            font-size: 1.2rem;
            float: right;
            color: #888 !important;
            cursor: pointer;
            border: 1px solid rgb(185, 185, 185);
            padding: 3px;
            margin: 1px;
            line-height: 1.1rem;
            text-transform: none;
        }

        .input-output-copier:hover {
            background-color: #def;
        }

        .test-explanation textarea {
            width: 100%;
            height: 1.5em;
        }
    </style>

<div class="problemindexholder" problemindex="A">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Минимум на стеке</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам требуется реализовать структуру данных, выполняющую следующие операции: </p><ol> <li> Добавить элемент <span class="tex-span"><i>x</i></span> в конец структуры. </li><li> Удалить последний элемент из структуры. </li><li> Выдать минимальный элемент в структуре. </li></ol></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла задано одно целое число <span class="tex-span"><i>n</i></span>&nbsp;— количество операций (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">6</sup></span>). В следующих <span class="tex-span"><i>n</i></span> строках заданы сами операции. В <span class="tex-span"><i>i</i></span>–ой строке число <span class="tex-span"><i>t</i><sub class="lower-index"><i>i</i></sub></span>&nbsp;—
 тип операции (1, если операция добавления. 2, если операция удаления. 
3, если операция минимума). Если задана операция добавления, то через 
пробел записано целое число <span class="tex-span"><i>x</i></span>&nbsp;— элемент, который следует добавить в структуру (<span class="tex-span"> - 10<sup class="upper-index">9</sup> ≤ <i>x</i> ≤ 10<sup class="upper-index">9</sup></span>). Гарантируется, что перед каждой операцией удаления или нахождения минимума структура не пуста.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для
 каждой операции нахождения минимума выведите одно число&nbsp;— 
минимальный элемент в структуре. Ответы разделяйте переводом строки.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id007221391233198614" id="id009136051903059537" class="input-output-copier">Скопировать</div></div><pre id="id007221391233198614">8<br>1 2<br>1 3<br>1 -3<br>3<br>2<br>3<br>2<br>3<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id002211524001287647" id="id004929725257509038" class="input-output-copier">Скопировать</div></div><pre id="id002211524001287647">-3<br>2<br>2<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



        String.prototype.replaceAll = function (search, replace) {
            return this.split(search).join(replace);
        };

        $(".sample-test .title").each(function() {
            var preId = ("id" + Math.random()).replaceAll(".", "0");
            var cpyId = ("id" + Math.random()).replaceAll(".", "0");

            $(this).parent().find("pre").attr("id", preId);
            var $copy = $("<div title='Скопировать' data-clipboard-target='#" + preId + "' id='" + cpyId + "' class='input-output-copier'>Скопировать</div>");
            $(this).append($copy);

            var clipboard = new Clipboard('#' + cpyId, {
                text: function(trigger) {
                    return document.querySelector('#' + preId).innerText;
                }
            });

            var isInput = $(this).parent().hasClass("input");

            clipboard.on('success', function(e) {
                if (isInput) {
                    Codeforces.showMessage("Входные данные были скопированы в буфер обмена");
                } else {
                    Codeforces.showMessage("Выходные данные были скопированы в буфер обмена");
                }
                e.clearSelection();
            });
        });

        autosize($('.test-explanation textarea'));

    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="B">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. Шарики</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В
 одной компьютерной игре игрок выставляет в линию шарики разных цветов. 
Когда образуется непрерывная цепочка из трех и более шариков одного 
цвета, она удаляется из линии. Все шарики при этом сдвигаются друг к 
другу, и ситуация может повториться.</p><p>Напишите программу, которая 
по данной ситуации определяет, сколько шариков будет сейчас уничтожено. 
Естественно, непрерывных цепочек из трех и более одноцветных шаров в 
начальный может быть не более одной.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Даны количество шариков в цепочке (не более <span class="tex-span">10<sup class="upper-index">5</sup></span>) и цвета шариков (от 0 до 9, каждому цвету соответствует свое целое число).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Требуется вывести количество шариков, которое будет уничтожено.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0047605610062710124" id="id0024714908851005513" class="input-output-copier">Скопировать</div></div><pre id="id0047605610062710124">5 1 3 3 3 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0025305707006547806" id="id0017124397845339567" class="input-output-copier">Скопировать</div></div><pre id="id0025305707006547806">3<br></pre></div><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0035727584593751927" id="id007902470580701326" class="input-output-copier">Скопировать</div></div><pre id="id0035727584593751927">10 3 3 2 1 1 1 2 2 3 3<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id004473189644395853" id="id009948773199179736" class="input-output-copier">Скопировать</div></div><pre id="id004473189644395853">10<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="C">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. Астроград</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В
 Астрополисе прошел концерт популярной группы Астроград. За пару дней до
 концерта перед кассой выстроилась огромная очередь из людей, желающих 
туда попасть. Изначально очередь была пуста. В каждый из <span class="tex-span"><i>n</i></span> моментов времени происходило следующее: </p><ol> <li> В очередь пришел новый человек с уникальным номером <span class="tex-span"><i>id</i></span>, он встает в очередь последним. </li><li> Человеку, стоящему спереди очереди, удалось купить билет. Он уходит. </li><li> Человеку, стоящему последнему в очереди, надоело ждать. Он уходит. </li><li> Человек с уникальным номером <span class="tex-span"><i>q</i></span> хочет знать, сколько людей стоит в очереди спереди него. </li><li> Очередь хочет знать, человек с каким уникальным номером стоит сейчас первым и задерживает всех. </li></ol><p>Вам необходимо написать программу, которая умеет обрабатывать описанные события.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке дано целое число <span class="tex-span"><i>n</i></span> <span class="tex-span">(1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup>)</span>&nbsp;— количество событий. В каждой из следующих <span class="tex-span"><i>n</i></span> строк дано описание событий: номер события, а также число <span class="tex-span"><i>id</i></span> <span class="tex-span">(1 ≤ <i>id</i> ≤ 10<sup class="upper-index">5</sup>)</span> для событий типа 1 и число <span class="tex-span"><i>q</i></span>
 для событий типа 4. События происходили в том порядке, в каком они 
описаны во входном файле. Гарантируется корректность всех событий.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите ответы для событий типа 4 и 5 в том порядке, в каком они описаны во входном файле.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0009724899644042473" id="id00005316243241415997" class="input-output-copier">Скопировать</div></div><pre id="id0009724899644042473">7<br>1 1<br>5<br>1 3<br>3<br>2<br>1 2<br>4 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0010209768214008053" id="id009672076581511174" class="input-output-copier">Скопировать</div></div><pre id="id0010209768214008053">1<br>0<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p>В примере из условия происходили следующие события: </p><ol> <li> В очередь пришел человек с <span class="tex-span"><i>id</i> = 1</span>. Очередь: <span class="tex-font-style-tt">[ 1 ]</span> </li><li> Первым в очереди стоит человек с <span class="tex-span"><i>id</i> = 1</span>. Очередь: <span class="tex-font-style-tt">[ 1 ]</span> </li><li> В очередь пришел человек с <span class="tex-span"><i>id</i> = 3</span>. Очередь: <span class="tex-font-style-tt">[ 1, 3 ]</span> </li><li> Последнему в очереди надоело стоять и он уходит. Очередь: <span class="tex-font-style-tt">[ 1 ]</span> </li><li> Первому в очереди удалось купить билет и он уходит. Очередь: <span class="tex-font-style-tt">[ ]</span> </li><li> В очередь пришел человек с <span class="tex-span"><i>id</i> = 2</span>. Очередь: <span class="tex-font-style-tt">[ 2 ]</span> </li><li> <span class="tex-span"><i>q</i> = 2</span> хочет знать, сколько человек стоит перед ним. Очередь: <span class="tex-font-style-tt">[ 2 ]</span> </li></ol></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="D">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Гоблины и шаманы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Гоблины
 Мглистых гор очень любят ходить к своим шаманам. Так как гоблинов 
много, к шаманам часто образуются очень длинные очереди. А поскольку 
много гоблинов в одном месте быстро образуют шумную толку, которая 
мешает шаманам проводить сложные медицинские манипуляции, последние 
решили установить некоторые правила касательно порядка в очереди.</p><p>Обычные
 гоблины при посещении шаманов должны вставать в конец очереди. 
Привилегированные же гоблины, знающие особый пароль, встают ровно в ее 
середину, причем при нечетной длине очереди они встают сразу за центром.</p><p>Так
 как гоблины также широко известны своим непочтительным отношением ко 
всяческим правилам и законам, шаманы попросили вас написать программу, 
которая бы отслеживала порядок гоблинов в очереди.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входных данный записано число N (1 <span class="tex-span"> ≤ </span> N <span class="tex-span"> ≤ </span> <span class="tex-span">10<sup class="upper-index">5</sup> * 5</span>) - количество запросов к программе. Следующие N строк содержат описание запросов в формате: </p><ul> <li> ,,+ i" - гоблин с номером i (1 <span class="tex-span"> ≤ </span> i <span class="tex-span"> ≤ </span> N) встает в конец очереди. </li><li> ,,* i" - привилегированный гоблин с номером i встает в середину очереди. </li><li> ,,-" - первый гоблин из очереди уходит к шаманам. Гарантируется, что на момент такого запроса очередь не пуста. </li></ul></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса типа ,,-" программа должна вывести номер гоблина, который должен зайти к шаманам.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id005531791134952927" id="id007346036037681398" class="input-output-copier">Скопировать</div></div><pre id="id005531791134952927">7<br>+ 1<br>+ 2<br>-<br>+ 3<br>+ 4<br>-<br>-<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id009197352773614429" id="id003444654420009172" class="input-output-copier">Скопировать</div></div><pre id="id009197352773614429">1<br>2<br>3<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="E">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Постфиксная запись</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В постфиксной записи (или обратной польской записи) операция записывается после двух операндов. Например, сумма двух чисел <span class="tex-font-style-tt">A</span> и <span class="tex-font-style-tt">B</span> записывается как <span class="tex-font-style-tt">A B +</span>. Запись <span class="tex-font-style-tt">B C + D *</span> обозначает привычное нам <span class="tex-font-style-tt">(B + C) * D</span>, а запись <span class="tex-font-style-tt">A B C + D * +</span> означает <span class="tex-font-style-tt">A + (B + C) * D</span>.
 Достоинство постфиксной записи в том, что она не требует скобок и 
дополнительных соглашений о приоритете операторов для своего чтения.</p><p>Дано выражение в обратной польской записи. Определите его значение.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В единственной строке записано выражение в постфиксной записи, содержащее однозначные числа и операции <span class="tex-font-style-tt">+</span>, <span class="tex-font-style-tt">-</span>, <span class="tex-font-style-tt">*</span>. Строка содержит не более 100 чисел и операций.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Необходимо
 вывести значение записанного выражения. Гарантируется, что результат 
выражения, а также результаты всех промежуточных вычислений по модулю 
меньше <span class="tex-span">2<sup class="upper-index">31</sup></span>.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id006495556624259421" id="id007497008687776432" class="input-output-copier">Скопировать</div></div><pre id="id006495556624259421">8 9 + 1 7 - *<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id007623443436432136" id="id007067587603200476" class="input-output-copier">Скопировать</div></div><pre id="id007623443436432136">-102<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="F">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Сортировка стеком</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id00027651468896076725" id="id009844138703917051" class="input-output-copier">Скопировать</div></div><pre id="id00027651468896076725">5<br>5 3 1 2 4<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id006018058182538863" id="id00763343778138393" class="input-output-copier">Скопировать</div></div><pre id="id006018058182538863">push<br>push<br>push<br>pop<br>push<br>pop<br>pop<br>push<br>pop<br>pop<br></pre></div><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id00013893085879445266" id="id0048030355232677624" class="input-output-copier">Скопировать</div></div><pre id="id00013893085879445266">3<br>2 3 1<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id008189829672880592" id="id004967407869292434" class="input-output-copier">Скопировать</div></div><pre id="id008189829672880592">impossible<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="G">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Система непересекающихся множеств</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Реализуйте
 систему непересекающихся множеств. Вместе с каждым множеством храните 
минимальный, максимальный элемент в этом множестве и их количество.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входного файла содержит <span class="tex-span"><i>n</i></span> — количество элементов в носителе (<span class="tex-span">1 ≤ <i>n</i> ≤ 300 000</span>). Далее операций с множеством. Операция <span class="tex-font-style-tt">get</span> должна возвращать минимальный, максимальный элемент в соответствующем множестве, а также их количество.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите последовательно результат выполнения всех операций <span class="tex-font-style-tt">get</span>.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id006329119062715949" id="id008983079591174468" class="input-output-copier">Скопировать</div></div><pre id="id006329119062715949">5<br>union 1 2<br>get 3<br>get 2<br>union 2 3<br>get 2<br>union 1 3<br>get 5<br>union 4 5<br>get 5<br>union 4 1<br>get 5<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0016407140981314772" id="id004773937301009499" class="input-output-copier">Скопировать</div></div><pre id="id0016407140981314772">3 3 1<br>1 2 2<br>1 3 3<br>5 5 1<br>4 5 2<br>1 5 5<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 1em;">


<div class="problemindexholder" problemindex="H">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. Подсчет опыта</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>64 мегабайта</div><div class="input-file"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В
 очередной онлайн игре игроки, как обычно, сражаются с монстрами и 
набирают опыт. Для того, чтобы сражаться с монстрами, они объединяются в
 кланы. После победы над монстром, всем участникам клана, победившего 
его, добавляется одинаковое число единиц опыта. Особенностью этой игры 
является то, что кланы никогда не распадаются и из клана нельзя выйти. 
Единственная доступная операция — объединение двух кланов в один. </p><p>Поскольку игроков стало уже много, вам поручили написать систему учета текущего опыта игроков.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла содержатся числа <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200000</span>) и <span class="tex-span"><i>m</i></span> <span class="tex-span">1 ≤ <i>m</i> ≤ 200000</span> — число зарегистрированных игроков и число запросов.</p><p>В следующих <span class="tex-span"><i>m</i></span> строках содержатся описания запросов. Запросы бывают трех типов: </p><ul> <li> <span class="tex-font-style-tt">join X Y</span> — объединить кланы, в которые входят игроки <span class="tex-font-style-tt">X</span> и <span class="tex-font-style-tt">Y</span> (если они уже в одном клане, то ничего не меняется). </li><li> <span class="tex-font-style-tt">add X V</span> — добавить <span class="tex-font-style-tt">V</span> единиц опыта всем участникам клана, в который входит игрок <span class="tex-font-style-tt">X</span> (<span class="tex-span">1 ≤ <i>V</i> ≤ 100</span>). </li><li> <span class="tex-font-style-tt">get X</span> — вывести текущий опыт игрока <span class="tex-font-style-tt">X</span>. </li></ul><p>Изначально у всех игроков 0 опыта и каждый из них состоит в клане, состоящим из него одного.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса <span class="tex-font-style-tt">get X</span> выведите текущий опыт игрока <span class="tex-font-style-tt">X</span>.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id005770805794312331" id="id009739373432396841" class="input-output-copier">Скопировать</div></div><pre id="id005770805794312331">3 6<br>add 1 100<br>join 1 3<br>add 1 50<br>get 1<br>get 2<br>get 3<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id006867955516193086" id="id002726379944290216" class="input-output-copier">Скопировать</div></div><pre id="id006867955516193086">150<br>0<br>50<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
    </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2019 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>

</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div><div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px none; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; min-width: 0px; max-width: none; padding: 0px; border: 0px none; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-size-adjust: none; font-family: MathJax_Size1, sans-serif;"></div></div><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; width: 0px; height: 0px;"><div><iframe name="fb_xdm_frame_https" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" style="border: medium none;" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/d_vbiawPdxB.htm" frameborder="0"></iframe></div><div></div></div></div></body></html>