<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01//EN">
<html><head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <meta name="X-Csrf-Token" content="92cdf8090c10c488e95e1afbec74a5f2">
    <meta id="viewport" name="viewport" content="width=device-width, initial-scale=0.01">
    <script src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sdk.js" async="" crossorigin="anonymous"></script><script type="text/javascript" async="" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ga.js"></script><script id="facebook-jssdk" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sdk_002.js"></script><script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery-1.js"></script>
    <script type="application/javascript">
        window.standaloneContest = false;
        function adjustViewport() {
            var screenWidthPx = Math.min($(window).width(), window.screen.width);
            var siteWidthPx = 1100; // min width of site
            var ratio = Math.min(screenWidthPx / siteWidthPx, 1.0);
            var viewport = "width=device-width, initial-scale=" + ratio;
            $('#viewport').attr('content', viewport);
            var style = $('<style>html * { max-height: 1000000px; }</style>');
            $('html > head').append(style);
        }

        if ( /Android|webOS|iPhone|iPad|iPod|BlackBerry/i.test(navigator.userAgent) ) {
            adjustViewport();
        }
    </script>
    <meta http-equiv="pragma" content="no-cache">
    <meta http-equiv="expires" content="-1">
    <meta http-equiv="profileName" content="f1">
    <meta name="google-site-verification" content="OTd2dN5x4nS4OPknPI9JFg36fKxjqY0i1PSfFPv_J90">
    <meta property="fb:admins" content="100001352546622">
    <meta property="og:image" content="//st.codeforces.com/s/52128/images/codeforces-telegram-square.png">
    <link rel="image_src" href="http://st.codeforces.com/s/52128/images/codeforces-telegram-square.png">
    <meta property="og:title" content="Задачи - Codeforces">
    <meta property="og:description" content="">
    
    <meta property="og:site_name" content="Codeforces">
    
    
    
    
    
    
    <meta name="utc_offset" content="+03:00">
    <meta name="verify-reformal" content="f56f99fd7e087fb6ccb48ef2">
    <title>Задачи - Codeforces</title>
        <meta name="description" content="Codeforces. Соревнования и олимпиады по информатике и программированию, сообщество программистов">
        <meta name="keywords" content="программирование информатика контест олимпиада алгоритмы c++ java графы vkcup">
    <meta name="robots" content="index, follow">

    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/font-awesome.css" type="text/css" charset="utf-8">

        <link href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/css.css" rel="stylesheet" type="text/css">
        <link href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/css_002.css" rel="stylesheet" type="text/css">


    <link rel="shortcut icon" type="image/png" href="http://st.codeforces.com/s/52128/favicon.png">

    <!--CombineResourcesFilter-->
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/prettify.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/clear.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ttypography.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/problem-statement.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/second-level-menu.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/roundbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/datatable.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/table-form.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/topic.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/facebox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_004.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/colorbox.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_003.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/community.css" type="text/css" charset="utf-8">
        <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/groups.css" type="text/css" charset="utf-8">

    <!-- MathJax -->
    <script type="text/x-mathjax-config;executed=true">
    MathJax.Hub.Config({
      tex2jax: {inlineMath: [['$$$','$$$']], displayMath: [['$$$$$$','$$$$$$']]}
    });
    </script>
    <script type="text/javascript" async="" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/MathJax.js">
    </script>
    <!-- /MathJax -->

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/prettify.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/moment-with-locales.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/pushstream.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_010.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_007.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_008.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_012.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/facebox.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_002.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_002.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_003.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/wysiwyg_004.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_006.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_011.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_009.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_005.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_003.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/clipboard.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/autosize.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/sjcl.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces-options.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/EventCatcher.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/preparedVerdictFormats-ru.js"></script>
    <!--/CombineResourcesFilter-->

    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style_002.css" type="text/css" charset="utf-8">
    <link rel="stylesheet" href="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/style_003.css" type="text/css" charset="utf-8">

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/share.js" charset="utf-8"></script>

    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_004.js"></script>
    <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/set.js"></script>

    <!--[if IE]>
    <style>
        #sidebar {
            padding-left: 1em;
            margin: 1em 1em 1em 0;
        }
    </style>
    <![endif]-->

        <script type="text/javascript" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/jquery_013.js"></script>
        <script src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/openapi.js" type="text/javascript"></script>

<style type="text/css">.MathJax_Hover_Frame {border-radius: .25em; -webkit-border-radius: .25em; -moz-border-radius: .25em; -khtml-border-radius: .25em; box-shadow: 0px 0px 15px #83A; -webkit-box-shadow: 0px 0px 15px #83A; -moz-box-shadow: 0px 0px 15px #83A; -khtml-box-shadow: 0px 0px 15px #83A; border: 1px solid #A6D ! important; display: inline-block; position: absolute}
.MathJax_Menu_Button .MathJax_Hover_Arrow {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 4px; -webkit-border-radius: 4px; -moz-border-radius: 4px; -khtml-border-radius: 4px; font-family: 'Courier New',Courier; font-size: 9px; color: #F0F0F0}
.MathJax_Menu_Button .MathJax_Hover_Arrow span {display: block; background-color: #AAA; border: 1px solid; border-radius: 3px; line-height: 0; padding: 4px}
.MathJax_Hover_Arrow:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_Hover_Arrow:hover span {background-color: #CCC!important}
</style><style type="text/css">#MathJax_About {position: fixed; left: 50%; width: auto; text-align: center; border: 3px outset; padding: 1em 2em; background-color: #DDDDDD; color: black; cursor: default; font-family: message-box; font-size: 120%; font-style: normal; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; border-radius: 15px; -webkit-border-radius: 15px; -moz-border-radius: 15px; -khtml-border-radius: 15px; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_About.MathJax_MousePost {outline: none}
.MathJax_Menu {position: absolute; background-color: white; color: black; width: auto; padding: 2px; border: 1px solid #CCCCCC; margin: 0; cursor: default; font: menu; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; z-index: 201; box-shadow: 0px 10px 20px #808080; -webkit-box-shadow: 0px 10px 20px #808080; -moz-box-shadow: 0px 10px 20px #808080; -khtml-box-shadow: 0px 10px 20px #808080; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
.MathJax_MenuItem {padding: 2px 2em; background: transparent}
.MathJax_MenuArrow {position: absolute; right: .5em; padding-top: .25em; color: #666666; font-size: .75em}
.MathJax_MenuActive .MathJax_MenuArrow {color: white}
.MathJax_MenuArrow.RTL {left: .5em; right: auto}
.MathJax_MenuCheck {position: absolute; left: .7em}
.MathJax_MenuCheck.RTL {right: .7em; left: auto}
.MathJax_MenuRadioCheck {position: absolute; left: 1em}
.MathJax_MenuRadioCheck.RTL {right: 1em; left: auto}
.MathJax_MenuLabel {padding: 2px 2em 4px 1.33em; font-style: italic}
.MathJax_MenuRule {border-top: 1px solid #CCCCCC; margin: 4px 1px 0px}
.MathJax_MenuDisabled {color: GrayText}
.MathJax_MenuActive {background-color: Highlight; color: HighlightText}
.MathJax_MenuDisabled:focus, .MathJax_MenuLabel:focus {background-color: #E8E8E8}
.MathJax_ContextMenu:focus {outline: none}
.MathJax_ContextMenu .MathJax_MenuItem:focus {outline: none}
#MathJax_AboutClose {top: .2em; right: .2em}
.MathJax_Menu .MathJax_MenuClose {top: -10px; left: -10px}
.MathJax_MenuClose {position: absolute; cursor: pointer; display: inline-block; border: 2px solid #AAA; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; font-family: 'Courier New',Courier; font-size: 24px; color: #F0F0F0}
.MathJax_MenuClose span {display: block; background-color: #AAA; border: 1.5px solid; border-radius: 18px; -webkit-border-radius: 18px; -moz-border-radius: 18px; -khtml-border-radius: 18px; line-height: 0; padding: 8px 0 6px}
.MathJax_MenuClose:hover {color: white!important; border: 2px solid #CCC!important}
.MathJax_MenuClose:hover span {background-color: #CCC!important}
.MathJax_MenuClose:hover:focus {outline: none}
</style><style type="text/css">.MathJax_Preview .MJXf-math {color: inherit!important}
</style><style type="text/css">.MJX_Assistive_MathML {position: absolute!important; top: 0; left: 0; clip: rect(1px, 1px, 1px, 1px); padding: 1px 0 0 0!important; border: 0!important; height: 1px!important; width: 1px!important; overflow: hidden!important; display: block!important; -webkit-touch-callout: none; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -ms-user-select: none; user-select: none}
.MJX_Assistive_MathML.MJX_Assistive_MathML_Block {width: 100%!important}
</style><style type="text/css">#MathJax_Zoom {position: absolute; background-color: #F0F0F0; overflow: auto; display: block; z-index: 301; padding: .5em; border: 1px solid black; margin: 0; font-weight: normal; font-style: normal; text-align: left; text-indent: 0; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; -webkit-box-sizing: content-box; -moz-box-sizing: content-box; box-sizing: content-box; box-shadow: 5px 5px 15px #AAAAAA; -webkit-box-shadow: 5px 5px 15px #AAAAAA; -moz-box-shadow: 5px 5px 15px #AAAAAA; -khtml-box-shadow: 5px 5px 15px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true')}
#MathJax_ZoomOverlay {position: absolute; left: 0; top: 0; z-index: 300; display: inline-block; width: 100%; height: 100%; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
#MathJax_ZoomFrame {position: relative; display: inline-block; height: 0; width: 0}
#MathJax_ZoomEventTrap {position: absolute; left: 0; top: 0; z-index: 302; display: inline-block; border: 0; padding: 0; margin: 0; background-color: white; opacity: 0; filter: alpha(opacity=0)}
</style><style type="text/css">.MathJax_Preview {color: #888}
#MathJax_Message {position: fixed; left: 1px; bottom: 2px; background-color: #E6E6E6; border: 1px solid #959595; margin: 0px; padding: 2px 8px; z-index: 102; color: black; font-size: 80%; width: auto; white-space: nowrap}
#MathJax_MSIE_Frame {position: absolute; top: 0; left: 0; width: 0px; z-index: 101; border: 0px; margin: 0px; padding: 0px}
.MathJax_Error {color: #CC0000; font-style: italic}
</style><style type="text/css">.MJXp-script {font-size: .8em}
.MJXp-right {-webkit-transform-origin: right; -moz-transform-origin: right; -ms-transform-origin: right; -o-transform-origin: right; transform-origin: right}
.MJXp-bold {font-weight: bold}
.MJXp-italic {font-style: italic}
.MJXp-scr {font-family: MathJax_Script,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-frak {font-family: MathJax_Fraktur,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-sf {font-family: MathJax_SansSerif,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-cal {font-family: MathJax_Caligraphic,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-mono {font-family: MathJax_Typewriter,'Times New Roman',Times,STIXGeneral,serif}
.MJXp-largeop {font-size: 150%}
.MJXp-largeop.MJXp-int {vertical-align: -.2em}
.MJXp-math {display: inline-block; line-height: 1.2; text-indent: 0; font-family: 'Times New Roman',Times,STIXGeneral,serif; white-space: nowrap; border-collapse: collapse}
.MJXp-display {display: block; text-align: center; margin: 1em 0}
.MJXp-math span {display: inline-block}
.MJXp-box {display: block!important; text-align: center}
.MJXp-box:after {content: " "}
.MJXp-rule {display: block!important; margin-top: .1em}
.MJXp-char {display: block!important}
.MJXp-mo {margin: 0 .15em}
.MJXp-mfrac {margin: 0 .125em; vertical-align: .25em}
.MJXp-denom {display: inline-table!important; width: 100%}
.MJXp-denom > * {display: table-row!important}
.MJXp-surd {vertical-align: top}
.MJXp-surd > * {display: block!important}
.MJXp-script-box > *  {display: table!important; height: 50%}
.MJXp-script-box > * > * {display: table-cell!important; vertical-align: top}
.MJXp-script-box > *:last-child > * {vertical-align: bottom}
.MJXp-script-box > * > * > * {display: block!important}
.MJXp-mphantom {visibility: hidden}
.MJXp-munderover, .MJXp-munder {display: inline-table!important}
.MJXp-over {display: inline-block!important; text-align: center}
.MJXp-over > * {display: block!important}
.MJXp-munderover > *, .MJXp-munder > * {display: table-row!important}
.MJXp-mtable {vertical-align: .25em; margin: 0 .125em}
.MJXp-mtable > * {display: inline-table!important; vertical-align: middle}
.MJXp-mtr {display: table-row!important}
.MJXp-mtd {display: table-cell!important; text-align: center; padding: .5em 0 0 .5em}
.MJXp-mtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-mlabeledtr {display: table-row!important}
.MJXp-mlabeledtr > .MJXp-mtd:first-child {padding-left: 0}
.MJXp-mlabeledtr:first-child > .MJXp-mtd {padding-top: 0}
.MJXp-merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MJXp-scale0 {-webkit-transform: scaleX(.0); -moz-transform: scaleX(.0); -ms-transform: scaleX(.0); -o-transform: scaleX(.0); transform: scaleX(.0)}
.MJXp-scale1 {-webkit-transform: scaleX(.1); -moz-transform: scaleX(.1); -ms-transform: scaleX(.1); -o-transform: scaleX(.1); transform: scaleX(.1)}
.MJXp-scale2 {-webkit-transform: scaleX(.2); -moz-transform: scaleX(.2); -ms-transform: scaleX(.2); -o-transform: scaleX(.2); transform: scaleX(.2)}
.MJXp-scale3 {-webkit-transform: scaleX(.3); -moz-transform: scaleX(.3); -ms-transform: scaleX(.3); -o-transform: scaleX(.3); transform: scaleX(.3)}
.MJXp-scale4 {-webkit-transform: scaleX(.4); -moz-transform: scaleX(.4); -ms-transform: scaleX(.4); -o-transform: scaleX(.4); transform: scaleX(.4)}
.MJXp-scale5 {-webkit-transform: scaleX(.5); -moz-transform: scaleX(.5); -ms-transform: scaleX(.5); -o-transform: scaleX(.5); transform: scaleX(.5)}
.MJXp-scale6 {-webkit-transform: scaleX(.6); -moz-transform: scaleX(.6); -ms-transform: scaleX(.6); -o-transform: scaleX(.6); transform: scaleX(.6)}
.MJXp-scale7 {-webkit-transform: scaleX(.7); -moz-transform: scaleX(.7); -ms-transform: scaleX(.7); -o-transform: scaleX(.7); transform: scaleX(.7)}
.MJXp-scale8 {-webkit-transform: scaleX(.8); -moz-transform: scaleX(.8); -ms-transform: scaleX(.8); -o-transform: scaleX(.8); transform: scaleX(.8)}
.MJXp-scale9 {-webkit-transform: scaleX(.9); -moz-transform: scaleX(.9); -ms-transform: scaleX(.9); -o-transform: scaleX(.9); transform: scaleX(.9)}
.MathJax_PHTML .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.MathJax_Display {text-align: center; margin: 1em 0em; position: relative; display: block!important; text-indent: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; width: 100%}
.MathJax .merror {background-color: #FFFF88; color: #CC0000; border: 1px solid #CC0000; padding: 1px 3px; font-style: normal; font-size: 90%}
.MathJax .MJX-monospace {font-family: monospace}
.MathJax .MJX-sans-serif {font-family: sans-serif}
#MathJax_Tooltip {background-color: InfoBackground; color: InfoText; border: 1px solid black; box-shadow: 2px 2px 5px #AAAAAA; -webkit-box-shadow: 2px 2px 5px #AAAAAA; -moz-box-shadow: 2px 2px 5px #AAAAAA; -khtml-box-shadow: 2px 2px 5px #AAAAAA; filter: progid:DXImageTransform.Microsoft.dropshadow(OffX=2, OffY=2, Color='gray', Positive='true'); padding: 3px 4px; z-index: 401; position: absolute; left: 0; top: 0; width: auto; height: auto; display: none}
.MathJax {display: inline; font-style: normal; font-weight: normal; line-height: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-align: left; text-transform: none; letter-spacing: normal; word-spacing: normal; word-wrap: normal; white-space: nowrap; float: none; direction: ltr; max-width: none; max-height: none; min-width: 0; min-height: 0; border: 0; padding: 0; margin: 0}
.MathJax:focus, body :focus .MathJax {display: inline-table}
.MathJax.MathJax_FullWidth {text-align: center; display: table-cell!important; width: 10000em!important}
.MathJax img, .MathJax nobr, .MathJax a {border: 0; padding: 0; margin: 0; max-width: none; max-height: none; min-width: 0; min-height: 0; vertical-align: 0; line-height: normal; text-decoration: none}
img.MathJax_strut {border: 0!important; padding: 0!important; margin: 0!important; vertical-align: 0!important}
.MathJax span {display: inline; position: static; border: 0; padding: 0; margin: 0; vertical-align: 0; line-height: normal; text-decoration: none; box-sizing: content-box}
.MathJax nobr {white-space: nowrap!important}
.MathJax img {display: inline!important; float: none!important}
.MathJax * {transition: none; -webkit-transition: none; -moz-transition: none; -ms-transition: none; -o-transition: none}
.MathJax_Processing {visibility: hidden; position: fixed; width: 0; height: 0; overflow: hidden}
.MathJax_Processed {display: none!important}
.MathJax_test {font-style: normal; font-weight: normal; font-size: 100%; font-size-adjust: none; text-indent: 0; text-transform: none; letter-spacing: normal; word-spacing: normal; overflow: hidden; height: 1px}
.MathJax_test.mjx-test-display {display: table!important}
.MathJax_test.mjx-test-inline {display: inline!important; margin-right: -1px}
.MathJax_test.mjx-test-default {display: block!important; clear: both}
.MathJax_ex_box {display: inline-block!important; position: absolute; overflow: hidden; min-height: 0; max-height: none; padding: 0; border: 0; margin: 0; width: 1px; height: 60ex}
.MathJax_em_box {display: inline-block!important; position: absolute; overflow: hidden; min-height: 0; max-height: none; padding: 0; border: 0; margin: 0; width: 1px; height: 60em}
.mjx-test-inline .MathJax_left_box {display: inline-block; width: 0; float: left}
.mjx-test-inline .MathJax_right_box {display: inline-block; width: 0; float: right}
.mjx-test-display .MathJax_right_box {display: table-cell!important; width: 10000em!important; min-width: 0; max-width: none; padding: 0; border: 0; margin: 0}
.MathJax .MathJax_HitBox {cursor: text; background: white; opacity: 0; filter: alpha(opacity=0)}
.MathJax .MathJax_HitBox * {filter: none; opacity: 1; background: transparent}
#MathJax_Tooltip * {filter: none; opacity: 1; background: transparent}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Bold.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Bold.otf?V=2.7.5') format('opentype'); font-weight: bold}
@font-face {font-family: MathJax_Main; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Main-Italic.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Main-Italic.otf?V=2.7.5') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Math; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Math-Italic.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Math-Italic.otf?V=2.7.5') format('opentype'); font-style: italic}
@font-face {font-family: MathJax_Caligraphic; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Caligraphic-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Caligraphic-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size1; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size1-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size1-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size2; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size2-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size2-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size3; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size3-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size3-Regular.otf?V=2.7.5') format('opentype')}
@font-face {font-family: MathJax_Size4; src: url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/woff/MathJax_Size4-Regular.woff?V=2.7.5') format('woff'), url('https://assets.codeforces.com/mathjax/fonts/HTML-CSS/TeX/otf/MathJax_Size4-Regular.otf?V=2.7.5') format('opentype')}
.MathJax .noError {vertical-align: ; font-size: 90%; text-align: left; color: black; padding: 1px 3px; border: 1px solid}
</style><style type="text/css">.fb_hidden{position:absolute;top:-10000px;z-index:10001}.fb_reposition{overflow:hidden;position:relative}.fb_invisible{display:none}.fb_reset{background:none;border:0;border-spacing:0;color:#000;cursor:auto;direction:ltr;font-family:"lucida grande", tahoma, verdana, arial, sans-serif;font-size:11px;font-style:normal;font-variant:normal;font-weight:normal;letter-spacing:normal;line-height:1;margin:0;overflow:visible;padding:0;text-align:left;text-decoration:none;text-indent:0;text-shadow:none;text-transform:none;visibility:visible;white-space:normal;word-spacing:normal}.fb_reset>div{overflow:hidden}@keyframes fb_transform{from{opacity:0;transform:scale(.95)}to{opacity:1;transform:scale(1)}}.fb_animate{animation:fb_transform .3s forwards}
.fb_dialog{background:rgba(82, 82, 82, .7);position:absolute;top:-10000px;z-index:10001}.fb_dialog_advanced{border-radius:8px;padding:10px}.fb_dialog_content{background:#fff;color:#373737}.fb_dialog_close_icon{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 0 transparent;cursor:pointer;display:block;height:15px;position:absolute;right:18px;top:17px;width:15px}.fb_dialog_mobile .fb_dialog_close_icon{left:5px;right:auto;top:5px}.fb_dialog_padding{background-color:transparent;position:absolute;width:1px;z-index:-1}.fb_dialog_close_icon:hover{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -15px transparent}.fb_dialog_close_icon:active{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yq/r/IE9JII6Z1Ys.png) no-repeat scroll 0 -30px transparent}.fb_dialog_iframe{line-height:0}.fb_dialog_content .dialog_title{background:#6d84b4;border:1px solid #365899;color:#fff;font-size:14px;font-weight:bold;margin:0}.fb_dialog_content .dialog_title>span{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/yd/r/Cou7n-nqK52.gif) no-repeat 5px 50%;float:left;padding:5px 0 7px 26px}body.fb_hidden{height:100%;left:0;margin:0;overflow:visible;position:absolute;top:-10000px;transform:none;width:100%}.fb_dialog.fb_dialog_mobile.loading{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/ya/r/3rhSv5V8j3o.gif) white no-repeat 50% 50%;min-height:100%;min-width:100%;overflow:hidden;position:absolute;top:0;z-index:10001}.fb_dialog.fb_dialog_mobile.loading.centered{background:none;height:auto;min-height:initial;min-width:initial;width:auto}.fb_dialog.fb_dialog_mobile.loading.centered #fb_dialog_loader_spinner{width:100%}.fb_dialog.fb_dialog_mobile.loading.centered .fb_dialog_content{background:none}.loading.centered #fb_dialog_loader_close{clear:both;color:#fff;display:block;font-size:18px;padding-top:20px}#fb-root #fb_dialog_ipad_overlay{background:rgba(0, 0, 0, .4);bottom:0;left:0;min-height:100%;position:absolute;right:0;top:0;width:100%;z-index:10000}#fb-root #fb_dialog_ipad_overlay.hidden{display:none}.fb_dialog.fb_dialog_mobile.loading iframe{visibility:hidden}.fb_dialog_mobile .fb_dialog_iframe{position:sticky;top:0}.fb_dialog_content .dialog_header{background:linear-gradient(from(#738aba), to(#2c4987));border-bottom:1px solid;border-color:#1d3c78;box-shadow:white 0 1px 1px -1px inset;color:#fff;font:bold 14px Helvetica, sans-serif;text-overflow:ellipsis;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0;vertical-align:middle;white-space:nowrap}.fb_dialog_content .dialog_header table{height:43px;width:100%}.fb_dialog_content .dialog_header td.header_left{font-size:12px;padding-left:5px;vertical-align:middle;width:60px}.fb_dialog_content .dialog_header td.header_right{font-size:12px;padding-right:5px;vertical-align:middle;width:60px}.fb_dialog_content .touchable_button{background:linear-gradient(from(#4267B2), to(#2a4887));background-clip:padding-box;border:1px solid #29487d;border-radius:3px;display:inline-block;line-height:18px;margin-top:3px;max-width:85px;padding:4px 12px;position:relative}.fb_dialog_content .dialog_header .touchable_button input{background:none;border:none;color:#fff;font:bold 12px Helvetica, sans-serif;margin:2px -12px;padding:2px 6px 3px 6px;text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog_content .dialog_header .header_center{color:#fff;font-size:16px;font-weight:bold;line-height:18px;text-align:center;vertical-align:middle}.fb_dialog_content .dialog_content{background:url(https://static.xx.fbcdn.net/rsrc.php/v3/y9/r/jKEcVPZFk-2.gif) no-repeat 50% 50%;border:1px solid #4a4a4a;border-bottom:0;border-top:0;height:150px}.fb_dialog_content .dialog_footer{background:#f5f6f7;border:1px solid #4a4a4a;border-top-color:#ccc;height:40px}#fb_dialog_loader_close{float:left}.fb_dialog.fb_dialog_mobile .fb_dialog_close_button{text-shadow:rgba(0, 30, 84, .296875) 0 -1px 0}.fb_dialog.fb_dialog_mobile .fb_dialog_close_icon{visibility:hidden}#fb_dialog_loader_spinner{animation:rotateSpinner 1.2s linear infinite;background-color:transparent;background-image:url(https://static.xx.fbcdn.net/rsrc.php/v3/yD/r/t-wz8gw1xG1.png);background-position:50% 50%;background-repeat:no-repeat;height:24px;width:24px}@keyframes rotateSpinner{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}
.fb_iframe_widget{display:inline-block;position:relative}.fb_iframe_widget span{display:inline-block;position:relative;text-align:justify}.fb_iframe_widget iframe{position:absolute}.fb_iframe_widget_fluid_desktop,.fb_iframe_widget_fluid_desktop span,.fb_iframe_widget_fluid_desktop iframe{max-width:100%}.fb_iframe_widget_fluid_desktop iframe{min-width:220px;position:relative}.fb_iframe_widget_lift{z-index:1}.fb_iframe_widget_fluid{display:inline}.fb_iframe_widget_fluid span{width:100%}</style></head>
<body><div style="visibility: hidden; overflow: hidden; position: absolute; top: 0px; height: 1px; width: auto; padding: 0px; border: 0px none; margin: 0px; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal;"><div id="MathJax_Hidden"></div></div><div id="MathJax_Message" style="display: none;"></div><div id="vk_api_transport" style="position: absolute; top: -10000px;"></div><span style="display:none;" class="csrf-token" data-csrf="92cdf8090c10c488e95e1afbec74a5f2">&nbsp;</span>
<div class="button-up" style="display: none; opacity: 0.7; width: 50px; height:100%; position: fixed; left: 0; top: 0; cursor: pointer; text-align: center; line-height: 35px; color: #d3dbe4; font-weight: bold; font-size: 3.0rem;"><i class="icon-circle-arrow-up"></i></div>
<div class="verdictPrototypeDiv" style="display: none;"></div>

<!-- Codeforces JavaScripts. -->
<script type="text/javascript">
    var queryMobile = Codeforces.queryString.mobile;
    if (queryMobile === "true" || queryMobile === "false") {
        Codeforces.putToStorage("useMobile", queryMobile == "true");
    } else {
        var useMobile = Codeforces.getFromStorage("useMobile");
        if (useMobile === true || useMobile === false) {
            if (useMobile != false) {
                Codeforces.redirect(Codeforces.updateUrlParameter(document.location.href, "mobile", useMobile));
            }
        }
    }
</script>
<script type="text/javascript">
    if (window.parent.frames.length > 0) {
        window.stop();
    }
</script>
<script type="text/javascript">
    VK.init({apiId: 1961905});
</script>
<script type="text/javascript">
    window.fbAsyncInit = function() {
        FB.init({
            appId      : '554666954583323',
            xfbml      : true,
            version    : 'v2.8'
        });
        FB.AppEvents.logPageView();
    };

    (function(d, s, id){
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) {return;}
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js";
        fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));
</script>

    <script type="text/javascript">
        $(document).ready(function () {
    (function () {
        jQuery.expr[':'].containsCI = function(elem, index, match) {
            return !match || !match.length || match.length < 4 || !match[3] || (
                    elem.textContent || elem.innerText || jQuery(elem).text() || ''
            ).toLowerCase().indexOf(match[3].toLowerCase()) >= 0;
        }
    }(jQuery));

    $.ajaxPrefilter(function(options, originalOptions, xhr) {
        var csrf = Codeforces.getCsrfToken();

        if (csrf) {
            var data = originalOptions.data;
            if (originalOptions.data !== undefined) {
                if (Object.prototype.toString.call(originalOptions.data) === '[object String]') {
                    data = $.deparam(originalOptions.data);
                }
            } else {
                data = {};
            }
            options.data = $.param($.extend(data, { csrf_token: csrf }));
        }
    });

    window.getCodeforcesServerTime = function(callback) {
        $.post("/data/time", {}, callback, "json");
    }

    window.updateTypography = function () {
        $("div.ttypography code").addClass("tt");
        $("div.ttypography pre>code").addClass("prettyprint").removeClass("tt");
        $("div.ttypography table").addClass("bordertable");
        prettyPrint();
    }

    $.ajaxSetup({ scriptCharset: "utf-8" ,contentType: "application/x-www-form-urlencoded; charset=UTF-8", headers: {
        'X-Csrf-Token': Codeforces.getCsrfToken()
    }});

    window.updateTypography();

    Codeforces.signForms();

    setTimeout(function() {
        $(".second-level-menu-list").lavaLamp({
            fx: "backout",
            speed: 1000
        });
    }, 0);


    Codeforces.countdown();
    $("a[rel='photobox']").colorbox();

        var count = 0;

        function getDelay() {
            var delay = 0;
            var last = Codeforces.getFromStorage("LastOnlineTimeUpdaterMillis", 0);
            if (last && last != null) {
                var period = count < 20 ? 180 * 1000 : 360 * 1000;
                delay = period - (new Date().getTime() - last);
                if (delay < 0)
                    delay = 0;
            }
            return delay;
        }

        window.setInterval(function () {
            if (getDelay() <= 0 && count < 120) {
                ++count;
                Codeforces.ping("/data/update-online");
            }
        }, 5000);

        var handle = "Forlis";
        $("a.rated-user:contains(" + handle + "), span.participant:contains(" + handle + ")").each(function () {
            if ($(this).text() == handle) {
                var td = $(this).parent();
                var tr = $(this).parent().parent();
                if (td.is("td") && tr.is("tr")) {
                    tr.addClass("highlighted-row");
                }
            }
        });

    function showAnnouncements(json) {
        //info("j=" + JSON.stringify(json));

        if (json.t != "a") {
            return;
        }
        // console.log("Got announcement from channel");
        setTimeout(function() {
            Codeforces.showAnnouncements(json.d, "ru");
        }, Math.random() * 500);
    }

    function showEventCatcherUserMessage(json) {
        if (json.t == "s") {
            var points = json.d[5];
            var passedTestCount = json.d[7];
            var judgedTestCount = json.d[8];
            var verdict = preparedVerdictFormats[json.d[12]];
            var verdictPrototypeDiv = $(".verdictPrototypeDiv");
            verdictPrototypeDiv.html(verdict);
            if (judgedTestCount != null && judgedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-judged").text(judgedTestCount);
            }
            if (passedTestCount != null && passedTestCount != undefined) {
                verdictPrototypeDiv.find(".verdict-format-passed").text(passedTestCount);
            }
            if (points != null && points != undefined) {
                verdictPrototypeDiv.find(".verdict-format-points").text(points);
            }
            Codeforces.showMessage(verdictPrototypeDiv.text());
        }
    }

    $(".clickable-title").click(function() {
        Codeforces.alert($(this).attr("title"));
    }).css("position", "relative").css("bottom", "3px");


    Codeforces.reformatTimes();

    //Codeforces.initializePubSub();
    if (window.codeforcesOptions.subscribeServerUrl) {
        window.eventCatcher = new EventCatcher(
            window.codeforcesOptions.subscribeServerUrl,
            [
                Codeforces.getGlobalChannel(),
                Codeforces.getUserChannel(),
                Codeforces.getUserShowMessageChannel(),
                Codeforces.getContestChannel(),
                Codeforces.getParticipantChannel(),
                Codeforces.getTalkChannel()
            ]
        );

        if (Codeforces.getParticipantChannel()) {
            window.eventCatcher.subscribe(Codeforces.getParticipantChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getContestChannel()) {
            window.eventCatcher.subscribe(Codeforces.getContestChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getGlobalChannel()) {
            window.eventCatcher.subscribe(Codeforces.getGlobalChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserChannel(), function(json) {
                showAnnouncements(json);
            });
        }

        if (Codeforces.getUserShowMessageChannel()) {
            window.eventCatcher.subscribe(Codeforces.getUserShowMessageChannel(), function(json) {
                showEventCatcherUserMessage(json);
            });
        }
    }

    Codeforces.setupContestTimes("/group/CYMPFXi8zA/data/contests");
    Codeforces.setupSpoilers();
    Codeforces.setupTutorials("/data/problemTutorial");
        });
    </script>

<script type="text/javascript">
  var _gaq = _gaq || [];
  _gaq.push(['_setAccount', 'UA-743380-5']);
  _gaq.push(['_trackPageview']);

  (function () {
    var ga = document.createElement('script'); ga.type = 'text/javascript'; ga.async = true;
    ga.src = (document.location.protocol == 'https:' ? 'https://ssl' : 'http://www') + '.google-analytics.com/ga.js';
    var s = document.getElementsByTagName('script')[0]; s.parentNode.insertBefore(ga, s);
  })();
</script>


<div id="body">
<div style="width: 950px; margin: 0 auto;" class="compact-problemset">
    <div id="header" style="position: relative;">
        <div style="float:left;">
                  <a href="http://codeforces.com/"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/codeforces-logo-with-telegram.png"></a>
        </div>
        <div class="lang">
            <div style="text-align: right;">
                <a href="http://codeforces.com/group/CYMPFXi8zA/contest/240094/problems?locale=en"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/gb.png" title="In English" alt="In English"></a>
                <a href="http://codeforces.com/group/CYMPFXi8zA/contest/240094/problems?locale=ru"><img src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/ru.png" title="По-русски" alt="По-русски"></a>
            </div>
        </div>
        <br style="clear: both;">
    </div>

    <div style="text-align: center; font-size: 1.8rem; margin-bottom: 0.5em;" class="caption">Лабораторная работа 1-4. Дерево отрезков</div>
    <div style="border-top: 1px solid #ccc; height: 1em;"></div>

    <div class="problem-frames">
        <div style="margin-bottom: 2em;">

    <style>
        .input-output-copier {
            font-size: 1.2rem;
            float: right;
            color: #888 !important;
            cursor: pointer;
            border: 1px solid rgb(185, 185, 185);
            padding: 3px;
            margin: 1px;
            line-height: 1.1rem;
            text-transform: none;
        }

        .input-output-copier:hover {
            background-color: #def;
        }

        .test-explanation textarea {
            width: 100%;
            height: 1.5em;
        }
    </style>

<div class="problemindexholder" problemindex="A">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">A. Сумма простая</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>1 секунда</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Вам нужно научиться отвечать на запрос «сумма чисел на отрезке».</p><p>Массив не меняется. Запросов много. Отвечать на каждый запрос следует за <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/7e81579a315624c5848da11ea399bc66c3bb1f2c.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Размер массива — <span class="tex-span"><i>n</i></span> и числа <span class="tex-span"><i>x</i></span>, <span class="tex-span"><i>y</i></span>, <span class="tex-span"><i>a</i><sub class="lower-index">0</sub></span>, порождающие массив <span class="tex-span"><i>a</i></span>: <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/065be43a747cb227ec0ff043600f3d0033f8e1d3.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"></p><p>Далее следует количество запросов <span class="tex-span"><i>m</i></span> и числа <span class="tex-span"><i>z</i></span>, <span class="tex-span"><i>t</i></span>, <span class="tex-span"><i>b</i><sub class="lower-index">0</sub></span>, порождающие массив <span class="tex-span"><i>b</i></span>: <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/81e2befe06bb12e1ff1386b6e30456447b082958.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p><p>Массив <span class="tex-span"><i>c</i></span> строится следующим образом: <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/9f98d4c98a6b56e379c52f73e28f895114b1959f.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">.</p><p>Запросы: <span class="tex-span"><i>i</i></span>-й из них&nbsp;— найти сумму на отрезке от <span class="tex-span"><i>min</i>(<i>c</i><sub class="lower-index">2<i>i</i></sub>, <i>c</i><sub class="lower-index">2<i>i</i> + 1</sub>)</span> до <span class="tex-span"><i>max</i>(<i>c</i><sub class="lower-index">2<i>i</i></sub>, <i>c</i><sub class="lower-index">2<i>i</i> + 1</sub>)</span> в массиве <span class="tex-span"><i>a</i></span>.</p><p>Ограничения: <span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">7</sup></span>, <span class="tex-span">0 ≤ <i>m</i> ≤ 10<sup class="upper-index">7</sup></span>. Все числа целые от 0 до <span class="tex-span">2<sup class="upper-index">16</sup></span>. <span class="tex-span"><i>t</i></span> может быть равно <span class="tex-span"> - 1</span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите сумму всех сумм.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id005547710791163207" id="id005618507325224132" class="input-output-copier">Скопировать</div></div><pre id="id005547710791163207">3 1 2 3<br>3 1 -1 4<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0013158803821434784" id="id000005230947482576243" class="input-output-copier">Скопировать</div></div><pre id="id0013158803821434784">23<br></pre></div></div></div><div class="note"><div class="section-title">Примечание</div><p><span class="tex-span"><i>a</i> = {3, 5, 7}, <i>b</i> = {4, 3, 2, 1, 0, 2<sup class="upper-index">30</sup> - 1}, <i>c</i> = {1, 0, 2, 1, 0, 0}</span>,</p><p>запросы = <span class="tex-span">{[0, 1], [1, 2], [0, 0]}</span>, суммы = <span class="tex-span">{8, 12, 3}</span>.</p></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");



        String.prototype.replaceAll = function (search, replace) {
            return this.split(search).join(replace);
        };

        $(".sample-test .title").each(function() {
            var preId = ("id" + Math.random()).replaceAll(".", "0");
            var cpyId = ("id" + Math.random()).replaceAll(".", "0");

            $(this).parent().find("pre").attr("id", preId);
            var $copy = $("<div title='Скопировать' data-clipboard-target='#" + preId + "' id='" + cpyId + "' class='input-output-copier'>Скопировать</div>");
            $(this).append($copy);

            var clipboard = new Clipboard('#' + cpyId, {
                text: function(trigger) {
                    return document.querySelector('#' + preId).innerText;
                }
            });

            var isInput = $(this).parent().hasClass("input");

            clipboard.on('success', function(e) {
                if (isInput) {
                    Codeforces.showMessage("Входные данные были скопированы в буфер обмена");
                } else {
                    Codeforces.showMessage("Выходные данные были скопированы в буфер обмена");
                }
                e.clearSelection();
            });
        });

        autosize($('.test-explanation textarea'));

    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="B">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">B. RSQ</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке находится число <span class="tex-span"><i>n</i></span>&nbsp;— размер массива. (<span class="tex-span">1 ≤ <i>n</i> ≤ 500 000</span>) Во второй строке находится <span class="tex-span"><i>n</i></span> чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>&nbsp;— элементы массива. Далее содержится описание операций, их количество не превышает <span class="tex-span">1 000 000</span>. В каждой строке находится одна из следующих операций: </p><ul> <li> <span class="tex-font-style-tt">set</span> <span class="tex-span"><i>i</i></span> <span class="tex-span"><i>x</i></span>&nbsp;— установить <span class="tex-span"><i>a</i>[<i>i</i>]</span> в <span class="tex-span"><i>x</i></span>. </li><li> <span class="tex-font-style-tt">sum</span> <span class="tex-span"><i>i</i></span> <span class="tex-span"><i>j</i></span>&nbsp;— вывести значение суммы элементов в массиве на отрезке с <span class="tex-span"><i>i</i></span> по <span class="tex-span"><i>j</i></span>, гарантируется, что (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>j</i> ≤ <i>n</i></span>). </li></ul> Все числа во входном файле и результаты выполнения всех операций не превышают по модулю <span class="tex-span">10<sup class="upper-index">18</sup></span>.</div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите последовательно результат выполнения всех операций <span class="tex-font-style-tt">sum</span>. Следуйте формату выходного файла из примера.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0038937551329869735" id="id005648221858675309" class="input-output-copier">Скопировать</div></div><pre id="id0038937551329869735">5<br>1 2 3 4 5<br>sum 2 5<br>sum 1 5<br>sum 1 4<br>sum 2 4<br>set 1 10<br>set 2 3<br>set 5 2<br>sum 2 5<br>sum 1 5<br>sum 1 4<br>sum 2 4<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id005110543605008618" id="id0004544755813514123" class="input-output-copier">Скопировать</div></div><pre id="id005110543605008618">14<br>15<br>10<br>9<br>12<br>22<br>20<br>10<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="C">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">C. RMQ2</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке находится число <span class="tex-span"><i>n</i></span>&nbsp;— размер массива. (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>) Во второй строке находится <span class="tex-span"><i>n</i></span> чисел <span class="tex-span"><i>a</i><sub class="lower-index"><i>i</i></sub></span>&nbsp;— элементы массива. Далее содержится описание операций, их количество не превышает <span class="tex-span">2·10<sup class="upper-index">5</sup></span>. В каждой строке находится одна из следующих операций: </p><ul> <li> <span class="tex-font-style-tt">set</span> <span class="tex-span"><i>i</i></span> <span class="tex-span"><i>j</i></span> <span class="tex-span"><i>x</i></span>&nbsp;— установить все <span class="tex-span"><i>a</i>[<i>k</i>]</span>, <span class="tex-span"><i>i</i> ≤ <i>k</i> ≤ <i>j</i></span> в <span class="tex-span"><i>x</i></span>. </li><li> <span class="tex-font-style-tt">add</span> <span class="tex-span"><i>i</i></span> <span class="tex-span"><i>j</i></span> <span class="tex-span"><i>x</i></span>&nbsp;— увеличить все <span class="tex-span"><i>a</i>[<i>k</i>]</span>, <span class="tex-span"><i>i</i> ≤ <i>k</i> ≤ <i>j</i></span> на <span class="tex-span"><i>x</i></span>. </li><li> <span class="tex-font-style-tt">min</span> <span class="tex-span"><i>i</i></span> <span class="tex-span"><i>j</i></span>&nbsp;— вывести значение минимального элемента в массиве на отрезке с <span class="tex-span"><i>i</i></span> по <span class="tex-span"><i>j</i></span>, гарантируется, что (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>j</i> ≤ <i>n</i></span>). </li></ul> Все числа во входном файле и результаты выполнения всех операций не превышают по модулю <span class="tex-span">10<sup class="upper-index">18</sup></span>.</div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите последовательно результат выполнения всех операций <span class="tex-font-style-tt">min</span>. Следуйте формату выходного файла из примера.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id008411406597037446" id="id005506815380368573" class="input-output-copier">Скопировать</div></div><pre id="id008411406597037446">5<br>1 2 3 4 5<br>min 2 5<br>min 1 5<br>min 1 4<br>min 2 4<br>set 1 3 10<br>add 2 4 4<br>min 2 5<br>min 1 5<br>min 1 4<br>min 2 4<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id00537597511891424" id="id005490437711093383" class="input-output-copier">Скопировать</div></div><pre id="id00537597511891424">2<br>1<br>1<br>2<br>5<br>5<br>8<br>8<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="D">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">D. Художник</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Итальянский
 художник-абстракционист Ф. Мандарино увлекся рисованием одномерных 
черно-белых картин. Он пытается найти оптимальное местоположение и 
количество черных участков картины. Для этого он проводит на прямой 
белые и черные отрезки, и после каждой из таких операций хочет знать 
количество черных отрезков на получившейся картине и их суммарную длину.</p><p>Изначально
 прямая&nbsp;— белая. Ваша задача&nbsp;— написать программу, которая 
после каждой из таких операций выводит в выходной файл интересующие 
художника данные.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла содержится общее количество нарисованных отрезков (<span class="tex-span">1 ≤ <i>n</i> ≤ 100 000</span>). В последующих <span class="tex-span"><i>n</i></span> строках содержится описание операций. Каждая операция описывается строкой вида <span class="tex-span"><i>c</i></span> <span class="tex-span"><i>x</i></span> <span class="tex-span"><i>l</i></span>, где <span class="tex-span"><i>c</i></span>&nbsp;— цвет отрезка (<span class="tex-font-style-tt">W</span> для белых отрезков, <span class="tex-font-style-tt">B</span> для черных), а сам отрезок имеет вид <span class="tex-span">[<i>x</i>;<i>x</i> + <i>l</i>)</span>, причем координаты обоих концов&nbsp;— целые числа, не превосходящие по модулю <span class="tex-span">500 000</span>. Длина задается положительным целым числом.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>После
 выполнения каждой из операций необходимо вывести в выходной файл на 
отдельной строке количество черных отрезков на картине и их суммарную 
длину, разделенные одним пробелом.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id002071349769026839" id="id007400688952159179" class="input-output-copier">Скопировать</div></div><pre id="id002071349769026839">7<br>W 2 3<br>B 2 2<br>B 4 2<br>B 3 2<br>B 7 2<br>W 3 1<br>W 0 10<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id009034107214510156" id="id009930161906713512" class="input-output-copier">Скопировать</div></div><pre id="id009034107214510156">0 0<br>1 2<br>1 4<br>1 4<br>2 6<br>3 5<br>0 0<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="E">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">E. Криптография</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>crypto.in</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>crypto.out</div></div><div><p>Задано <span class="tex-span"><i>n</i></span> матриц <span class="tex-span"><i>A</i><sub class="lower-index">1</sub>, <i>A</i><sub class="lower-index">2</sub>, ..., <i>A</i><sub class="lower-index"><i>n</i></sub></span> размера <span class="tex-span">2 × 2</span>. Необходимо для нескольких запросов вычислить произведение матриц <span class="tex-span"><i>A</i><sub class="lower-index"><i>i</i></sub>, <i>A</i><sub class="lower-index"><i>i</i> + 1</sub>, ..., <i>A</i><sub class="lower-index"><i>j</i></sub></span>. Все вычисления производятся по модулю <span class="tex-span"><i>r</i></span>.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входного файла содержит числа <span class="tex-span"><i>r</i></span> (<span class="tex-span">1 ≤ <i>r</i> ≤ 10 000</span>), <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 200 000</span>) и <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>m</i> ≤ 200 000</span>). Следующие <span class="tex-span"><i>n</i></span> блоков по две строки содержащие по два числа в строке&nbsp;— описания матриц. Затем следуют <span class="tex-span"><i>m</i></span> пар целых чисел от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>, запросы на произведение на отрезке.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите <span class="tex-span"><i>m</i></span>
 блоков по две строки,по два числа в каждой&nbsp;— произведения на 
отрезках. Разделяйте блоки пустой строкой. Все вычисления производятся 
по модулю <span class="tex-span"><i>r</i></span></p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id006830531107987347" id="id0024705396999080198" class="input-output-copier">Скопировать</div></div><pre id="id006830531107987347">3 4 4<br>0 1<br>0 0<br><br>2 1<br>1 2<br><br>0 0<br>0 2<br><br>1 0<br>0 2<br><br>1 4<br>2 3<br>1 3<br>2 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0028823174137369845" id="id009460040872272435" class="input-output-copier">Скопировать</div></div><pre id="id0028823174137369845">0 2<br>0 0<br><br>0 2<br>0 1<br><br>0 1<br>0 0<br><br>2 1<br>1 2<br><br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="F">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">F. Разреженные таблицы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>Дан массив из&nbsp;<span class="tex-span"><i>n</i></span>&nbsp;чисел.
 Требуется написать программу, которая будет отвечать на&nbsp;запросы 
следующего вида: найти минимум на&nbsp;отрезке между <span class="tex-span"><i>u</i></span> и&nbsp;<span class="tex-span"><i>v</i></span> включительно.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В&nbsp;первой строке входного файла даны три натуральных числа <span class="tex-span"><i>n</i></span>, <span class="tex-span"><i>m</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">5</sup></span>, <span class="tex-span">1 ≤ <i>m</i> ≤ 10<sup class="upper-index">7</sup></span>) и <span class="tex-span"><i>a</i><sub class="lower-index">1</sub></span> (<span class="tex-span">0 ≤ <i>a</i><sub class="lower-index">1</sub> &lt; 16 714 589</span>)&nbsp;—
 количество элементов в&nbsp;массиве, количество запросов и&nbsp;первый 
элемент массива соответственно. Вторая строка содержит два натуральных 
числа <span class="tex-span"><i>u</i><sub class="lower-index">1</sub></span> и&nbsp;<span class="tex-span"><i>v</i><sub class="lower-index">1</sub></span> (<span class="tex-span">1 ≤ <i>u</i><sub class="lower-index">1</sub>, <i>v</i><sub class="lower-index">1</sub> ≤ <i>n</i></span>)&nbsp;— первый запрос.</p><p>Элементы <span class="tex-span"><i>a</i><sub class="lower-index">2</sub>, <i>a</i><sub class="lower-index">3</sub>, ..., <i>a</i><sub class="lower-index"><i>n</i></sub></span> задаются следующей формулой: </p><center class="tex-equation"><img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/408d968e25f9c83160722d311e0d403dcd5bbfbc.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"></center><p>Например, при <span class="tex-span"><i>n</i> = 10</span>, <span class="tex-span"><i>a</i><sub class="lower-index">1</sub> = 12345</span> получается следующий массив: <span class="tex-span"><i>a</i></span> = (<span class="tex-span">12345</span>, <span class="tex-span">305498</span>, <span class="tex-span">7048017</span>, <span class="tex-span">11694653</span>, <span class="tex-span">1565158</span>, <span class="tex-span">2591019</span>, <span class="tex-span">9471233</span>, <span class="tex-span">570265</span>, <span class="tex-span">13137658</span>, <span class="tex-span">1325095</span>).</p><p>Запросы генерируются следующим образом: </p><center> <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/18f2c134bf44040c3687b935218606e3cb64e99d.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">,  <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/8f70517652e06eb454e07f478b56d4cfecde57c6.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">, </center> где <span class="tex-span"><i>ans</i><sub class="lower-index"><i>i</i></sub></span>&nbsp;— ответ на запрос номер <span class="tex-span"><i>i</i></span>.<p>Обратите внимание, что <span class="tex-span"><i>u</i><sub class="lower-index"><i>i</i></sub></span> может быть больше, чем <span class="tex-span"><i>v</i><sub class="lower-index"><i>i</i></sub></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В выходной файл выведите <span class="tex-span"><i>u</i><sub class="lower-index"><i>m</i></sub></span>, <span class="tex-span"><i>v</i><sub class="lower-index"><i>m</i></sub></span> и&nbsp;<span class="tex-span"><i>ans</i><sub class="lower-index"><i>m</i></sub></span> (последний запрос и&nbsp;ответ на&nbsp;него).</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0042409248370954167" id="id009020796289056117" class="input-output-copier">Скопировать</div></div><pre id="id0042409248370954167">10 8 12345<br>3 9<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id00808922264693966" id="id007521951491032847" class="input-output-copier">Скопировать</div></div><pre id="id00808922264693966">5 3 1565158<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="G">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">G. Окна</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>На
 экране расположены прямоугольные окна, каким-то образом перекрывающиеся
 (со сторонами, параллельными осям координат). Вам необходимо найти 
точку, которая покрыта наибольшим числом из них.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла записано число окон <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 50000</span>). Следующие <span class="tex-span"><i>n</i></span> строк содержат координаты окон <span class="tex-span"><i>x</i><sub class="lower-index">(1, <i>i</i>)</sub> <i>y</i><sub class="lower-index">(1, <i>i</i>)</sub> <i>x</i><sub class="lower-index">(2, <i>i</i>)</sub> <i>y</i><sub class="lower-index">(2, <i>i</i>)</sub></span>, где <span class="tex-span">(<i>x</i><sub class="lower-index">(1, <i>i</i>)</sub>, <i>y</i><sub class="lower-index">(1, <i>i</i>)</sub>)</span> — координаты левого верхнего угла <span class="tex-span"><i>i</i></span>-го окна, а <span class="tex-span">(<i>x</i><sub class="lower-index">(2, <i>i</i>)</sub>, <i>y</i><sub class="lower-index">(2, <i>i</i>)</sub>)</span> — правого нижнего (на экране компьютера <span class="tex-span"><i>y</i></span> растет сверху вниз, а <span class="tex-span"><i>x</i></span> — слева направо). Все координаты — целые числа, по модулю не превосходящие <span class="tex-span">2·10<sup class="upper-index">5</sup></span>.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В
 первой строке выходного файла выведите максимальное число окон, 
покрывающих какую-либо из точек в данной конфигурации. Во второй строке 
выведите два целых числа, разделенные пробелом — координаты точки, 
покрытой максимальным числом окон. Окна считаются замкнутыми, т.е. 
покрывающими свои граничные точки.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id005968961847478597" id="id005703531575377707" class="input-output-copier">Скопировать</div></div><pre id="id005968961847478597">2<br>0 0 3 3<br>1 1 4 4<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0007871634029808439" id="id0043944245830982676" class="input-output-copier">Скопировать</div></div><pre id="id0007871634029808439">2<br>1 3</pre></div><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id008502413313992531" id="id008906149883069288" class="input-output-copier">Скопировать</div></div><pre id="id008502413313992531">1<br>0 0 1 1<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id006422742122625276" id="id007357394445941707" class="input-output-copier">Скопировать</div></div><pre id="id006422742122625276">1<br>0 1</pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="H">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">H. RMQ наоборот</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>rmq.in</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>rmq.out</div></div><div><p>Рассмотрим массив <span class="tex-span"><i>a</i>[1..<i>n</i>]</span>. Пусть <span class="tex-span"><i>Q</i>(<i>i</i>, <i>j</i>)</span> — ответ на запрос о нахождении минимума среди чисел <span class="tex-span"><i>a</i>[<i>i</i>], ..., <i>a</i>[<i>j</i>]</span>. Вам даны несколько запросов и ответы на них. Восстановите исходный массив.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>Первая строка входного файла содержит число <span class="tex-span"><i>n</i></span>&nbsp;— размер массива, и <span class="tex-span"><i>m</i></span>&nbsp;— число запросов (<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100 000</span>). Следующие <span class="tex-span"><i>m</i></span> строк содержат по три целых числа <span class="tex-span"><i>i</i></span>, <span class="tex-span"><i>j</i></span> и <span class="tex-span"><i>q</i></span>, означающих, что <span class="tex-span"><i>Q</i>(<i>i</i>, <i>j</i>) = <i>q</i></span> (<span class="tex-span">1 ≤ <i>i</i> ≤ <i>j</i> ≤ <i>n</i></span>, <span class="tex-span"> - 2<sup class="upper-index">31</sup> ≤ <i>q</i> ≤ 2<sup class="upper-index">31</sup> - 1</span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Если искомого массива не существует, выведите строку «<span class="tex-font-style-tt">inconsistent</span>». </p><p>В противном случае в первую строку выходного файла выведите «<span class="tex-font-style-tt">consistent</span>». Во вторую строку выходного файла выведите элементы массива. Элементами массива должны быть целые числа в интервале от <span class="tex-span"> - 2<sup class="upper-index">31</sup></span> до <span class="tex-span">2<sup class="upper-index">31</sup> - 1</span> включительно. Если решений несколько, выведите любое.</p></div><div class="sample-tests"><div class="section-title">Примеры</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id00496028592067847" id="id009494801449858368" class="input-output-copier">Скопировать</div></div><pre id="id00496028592067847">3 2<br>1 2 1<br>2 3 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0011916664302666824" id="id004401258761094692" class="input-output-copier">Скопировать</div></div><pre id="id0011916664302666824">consistent<br>1 2 2 <br></pre></div><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id00559103847288955" id="id007998562385321184" class="input-output-copier">Скопировать</div></div><pre id="id00559103847288955">3 3<br>1 2 1<br>1 1 2<br>2 3 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0023765345410433458" id="id009949817930147157" class="input-output-copier">Скопировать</div></div><pre id="id0023765345410433458">inconsistent<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="I">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">I. Горы</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В парке развлечений «Ай-ой-ай» открылся новейший аттракцион: польские горки. Трек состоит из <span class="tex-span"><i>n</i></span>
 рельс, присоединенных одна к концу другой. Начало первой рельсы 
находится на высоте 0. Оператор Петя может конфигурировать аттракцион, 
изменяя по своему желанию подъём нескольких последовательных рельс. При 
этом подъём всех остальных рельс не изменяется. При каждом изменении 
конфигурации рельс положение следующих за изменяемыми подбирается таким 
образом, чтобы весь трек оставался связным.</p><p>Каждый запуск вагонетки осуществляется с энергией, достаточной для достижения высоты <span class="tex-span"><i>h</i></span>. Это значит, что вагонетка будет двигаться до тех пор, пока высота не превысит <span class="tex-span"><i>h</i></span>, либо пока не закончится трек.</p><p>По
 записям о всех изменениях конфигурации рельс и временах запусков 
вагонетки для каждого запуска определите, сколько рельс вагонетка 
проедет до остановки.</p><p>Трек можно представить как последовательность <span class="tex-span"><i>n</i></span> подъемов <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub></span>, по одному на рельс. Изначально рельсы горизонтальны, то есть <span class="tex-span"><i>d</i><sub class="lower-index"><i>i</i></sub> = 0</span> для всех <span class="tex-span"><i>i</i></span>.</p><center> <img class="tex-graphics" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/7c325ca08ec6ba2d8475a305f6745c8be35f396b.png" style="max-width: 100.0%;max-height: 100.0%;"> </center><p>Каждое изменение конфигурации определяется числами <span class="tex-span"><i>a</i></span>, <span class="tex-span"><i>b</i></span> и <span class="tex-span"><i>D</i></span>: все рельсы с <span class="tex-span"><i>a</i></span>-й по <span class="tex-span"><i>b</i></span>-ю включительно после этого действия имеют подъем, равный <span class="tex-span"><i>D</i></span>.</p><center> <img class="tex-graphics" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/c578d3b61378f4502034c9c50bccc379ca0c5c8d.png" style="max-width: 100.0%;max-height: 100.0%;"> </center><p>Каждый запуск вагонетки определяется единственным целым числом <span class="tex-span"><i>h</i></span>&nbsp;— максимальной высотой, на которую способна подняться вагонетка.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке записано целое число <span class="tex-span"><i>n</i></span> (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">9</sup></span>)&nbsp;— число рельс. Следующие строки содержат запросы трех видов:</p><ul> <li> <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/dd6db22569d2e90072f7585ce2ce350bb0041b51.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"> <span class="tex-span"><i>a</i></span> <span class="tex-span"><i>b</i></span> <span class="tex-span"><i>D</i></span>&nbsp;— изменение конфигурации. Рельсы с <span class="tex-span"><i>a</i></span>-й по <span class="tex-span"><i>b</i></span>-ю включительно после выполнения запроса имеют подъем, равный <span class="tex-span"><i>D</i></span>. </li><li> <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/c1d6cd0dea8722c914eaab09541470e54815c493.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"> <span class="tex-span"><i>h</i></span>&nbsp;— запуск вагонетки. Требуется найти число рельс, которое проедет вагонетка, которая способна подняться на высоту <span class="tex-span"><i>h</i></span>. </li><li> <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/f7411415153bdea571b5d5f6b6af2b3a5d48cf39.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle">&nbsp;— конец ввода. Этот запрос встретится ровно один раз в конце файла. </li></ul><p>В любой момент времени высота любой точки трека лежит в промежутке от 0 до <span class="tex-span">10<sup class="upper-index">9</sup></span>. Во вводе не более 100 000 строк.</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Для каждого запроса <img class="tex-formula" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/c1d6cd0dea8722c914eaab09541470e54815c493.png" style="max-width: 100.0%;max-height: 100.0%;" align="middle"> выведите единственное целое число&nbsp;— количество рельс, которое проедет вагонетка.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0008592690184939478" id="id006854098732325687" class="input-output-copier">Скопировать</div></div><pre id="id0008592690184939478">4<br>Q 1<br>I 1 4 2<br>Q 3<br>Q 1<br>I 2 2 -1<br>Q 3<br>E<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id006317141558059799" id="id006828887395106024" class="input-output-copier">Скопировать</div></div><pre id="id006317141558059799">4<br>1<br>0<br>3<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="J">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">J. Великая Китайская Стена</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>стандартный ввод</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>стандартный вывод</div></div><div><p>В этой задаче мы проследим альтернативную историю Великой Китайской Стены.</p><p>Великая Китайская Стена состоит из <span class="tex-span"><i>n</i></span> метровых участков, пронумерованных по порядку целыми числами от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>.
 Каждый участок характеризуется своей высотой в метрах&nbsp;— целым 
неотрицательным числом. До начала нашей истории Стена ещё не построена, 
поэтому высота каждого участка равна нулю.</p><p>Происходят события двух видов.</p><ol> <li> <span class="tex-font-style-sl">Укрепление Стены</span> (запись: «<span class="tex-font-style-tt">defend&nbsp;<span class="tex-span"><i>a</i></span>&nbsp;<span class="tex-span"><i>b</i></span>&nbsp;<span class="tex-span"><i>c</i></span></span>»).
 Император вызывает к себе вассалов из приграничных провинций и велит им
 сделать так, чтобы промежуток Стены, охватывающий участки от <span class="tex-span"><i>a</i></span> до <span class="tex-span"><i>b</i></span> включительно, имел высоту не менее <span class="tex-span"><i>c</i></span> метров. Это значит, что все участки меньшей высоты на этом промежутке нужно достроить до высоты <span class="tex-span"><i>c</i></span>, а остальные оставить нетронутыми. Приказ императора выполняется немедленно, то есть до наступления следующего события. </li><li> <span class="tex-font-style-sl">Нападение варваров</span> (запись: «<span class="tex-font-style-tt">attack&nbsp;<span class="tex-span"><i>d</i></span>&nbsp;<span class="tex-span"><i>e</i></span></span>»). Варвары подходят к Стене снаружи и занимают позиции напротив промежутка Стены, охватывающего участки от <span class="tex-span"><i>d</i></span> до <span class="tex-span"><i>e</i></span>
 включительно. После этого они находят такой участок на этом промежутке,
 у которого высота как можно меньше, и пытаются через него проникнуть на
 территорию Китая. Нападение также происходит немедленно, до наступления
 следующего события. </li></ol><p>Для восстановления достоверной 
альтернативно-исторической картины не хватает одного: для каждого 
нападения варваров указать минимальную высоту Стены на соответствующем 
промежутке, а также какой-нибудь участок из этого промежутка с такой 
высотой. По заданной последовательности событий найдите эти числа.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке заданы через пробел два целых числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span>&nbsp;— длина Стены в метрах и количество событий соответственно (<span class="tex-span">1 ≤ <i>n</i> ≤ 10<sup class="upper-index">6</sup></span>, <span class="tex-span">0 ≤ <i>m</i> ≤ 10<sup class="upper-index">5</sup></span>). В следующих <span class="tex-span"><i>m</i></span> строках описаны события в порядке их следования. Если событие описывает укрепление Стены, оно задано в форме «<span class="tex-font-style-tt">defend&nbsp;<span class="tex-span"><i>a</i></span>&nbsp;<span class="tex-span"><i>b</i></span>&nbsp;<span class="tex-span"><i>c</i></span></span>» (<span class="tex-span">1 ≤ <i>a</i> ≤ <i>b</i> ≤ <i>n</i></span>, <span class="tex-span">1 ≤ <i>c</i> ≤ 10<sup class="upper-index">7</sup></span>). Если же событие описывает нападение варваров, оно задано в форме «<span class="tex-font-style-tt">attack&nbsp;<span class="tex-span"><i>d</i></span>&nbsp;<span class="tex-span"><i>e</i></span></span>» (<span class="tex-span">1 ≤ <i>d</i> ≤ <i>e</i> ≤ <i>n</i></span>).</p></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>В
 ответ на каждое нападение варваров выведите строку, содержащую два 
числа, разделённые пробелом. Первое из этих чисел&nbsp;— минимальная 
высота Стены на соответствующем промежутке. Второе&nbsp;— номер любого 
метрового участка Стены на этом промежутке, имеющего такую высоту.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id005077177006405428" id="id008942998876322348" class="input-output-copier">Скопировать</div></div><pre id="id005077177006405428">5 4<br>defend 1 3 10<br>attack 1 4<br>attack 2 3<br>attack 1 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id001407393223772192" id="id0032645221102245303" class="input-output-copier">Скопировать</div></div><pre id="id001407393223772192">0 4<br>10 2<br>10 1<br></pre></div></div></div></div><p>  </p></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 2em;">


<div class="problemindexholder" problemindex="K">
        <div class="ttypography"><div class="problem-statement"><div class="header"><div class="title">K. Парковка</div><div class="time-limit"><div class="property-title">ограничение по времени на тест</div>2 секунды</div><div class="memory-limit"><div class="property-title">ограничение по памяти на тест</div>256 мегабайт</div><div class="input-file" style="font-weight: bold"><div class="property-title">ввод</div>parking.in</div><div class="output-file" style="font-weight: bold"><div class="property-title">вывод</div>parking.out</div></div><div><p>Hа кольцевой парковке есть <span class="tex-span"><i>n</i></span> мест пронумерованых от <span class="tex-span">1</span> до <span class="tex-span"><i>n</i></span>.
 Есть два вида событий прибытие машину на парковку и отъезд машины с 
парковки. Если машина приезжает на парковку, а её место занято, то она 
едет далее по кругу и встаёт на первое свободное место.</p></div><div class="input-specification"><div class="section-title">Входные данные</div><p>В первой строке входного файла находится два числа <span class="tex-span"><i>n</i></span> и <span class="tex-span"><i>m</i></span>&nbsp;— размер парковки и количество запросов(<span class="tex-span">1 ≤ <i>n</i>, <i>m</i> ≤ 100000</span>). В следующих <span class="tex-span"><i>m</i></span> строках находятся события. Каждая из этих строк имеет следующий вид: </p><ul> <li> enter <span class="tex-span"><i>x</i></span>&nbsp;— приехала машина, которая хочет встать на место <span class="tex-span"><i>x</i></span>. Для каждой такой команды выведите какое место займёт эта машина. </li><li> exit <span class="tex-span"><i>x</i></span>&nbsp;— уехала машина занимавшая место <span class="tex-span"><i>x</i></span>. Гарантируется, что на этом месте была машина. </li></ul></div><div class="output-specification"><div class="section-title">Выходные данные</div><p>Выведите последовательно результаты выполнения всех операций <span class="tex-font-style-tt">enter</span>.</p></div><div class="sample-tests"><div class="section-title">Пример</div><div class="sample-test"><div class="input"><div class="title">Входные данные<div title="Скопировать" data-clipboard-target="#id0021122305015668752" id="id007752395184620051" class="input-output-copier">Скопировать</div></div><pre id="id0021122305015668752">3 5<br>enter 1<br>enter 1<br>exit 1<br>enter 2<br>enter 2<br></pre></div><div class="output"><div class="title">Выходные данные<div title="Скопировать" data-clipboard-target="#id0019228962724505938" id="id008736364563236162" class="input-output-copier">Скопировать</div></div><pre id="id0019228962724505938">1<br>2<br>3<br>1<br></pre></div></div></div></div></div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
        <div style="margin-bottom: 1em;">


<div class="problemindexholder" problemindex="L">
        <div style="padding:1em;margin:1em 14em 0 14em;text-align: center;" class="alert alert-info">
            Условие недоступно на русском языке
        </div>
</div>


<script type="text/javascript">
    $(document).ready(function () {
        function endsWith(string, suffix) {
            return string.indexOf(suffix, string.length - suffix.length) !== -1;
        }

        var inputFileDiv = $("div.input-file");
        var inputFile = inputFileDiv.text();
        var outputFileDiv = $("div.output-file");
        var outputFile = outputFileDiv.text();

        if (!endsWith(inputFile, "стандартный ввод")
                && !endsWith(inputFile, "standard input")) {
            inputFileDiv.attr("style", "font-weight: bold");
        }

        if (!endsWith(outputFile, "стандартный вывод")
                && !endsWith(outputFile, "standard output")) {
            outputFileDiv.attr("style", "font-weight: bold");
        }

        var titleDiv = $("div.header div.title");




    });
</script>
        </div>
    </div>

    <br style="clear: both;">

    <div id="footer">
        <div><a href="http://codeforces.com/">Codeforces</a> (c) Copyright 2010-2019 Михаил Мирзаянов</div>
        <div>Соревнования по программированию 2.0</div>

    </div>

</div>


</div><div id="datepick-div" style="display: none;"></div><div id="cboxOverlay" style="display: none;"></div><div id="colorbox" class="" style="display: none; padding-bottom: 42px; padding-right: 42px;"><div id="cboxWrapper"><div><div id="cboxTopLeft" style="float: left;"></div><div id="cboxTopCenter" style="float: left;"></div><div id="cboxTopRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxMiddleLeft" style="float: left;"></div><div id="cboxContent" style="float: left;"><div id="cboxLoadedContent" style="width: 0px; height: 0px; overflow: hidden; float: left;"></div><div id="cboxLoadingOverlay" style="float: left;"></div><div id="cboxLoadingGraphic" style="float: left;"></div><div id="cboxTitle" style="float: left;"></div><div id="cboxCurrent" style="float: left;"></div><div id="cboxNext" style="float: left;"></div><div id="cboxPrevious" style="float: left;"></div><div id="cboxSlideshow" style="float: left;"></div><div id="cboxClose" style="float: left;"></div></div><div id="cboxMiddleRight" style="float: left;"></div></div><div style="clear: left;"><div id="cboxBottomLeft" style="float: left;"></div><div id="cboxBottomCenter" style="float: left;"></div><div id="cboxBottomRight" style="float: left;"></div></div></div><div style="position: absolute; width: 9999px; visibility: hidden; display: none;"></div></div><div style="position: absolute; width: 0px; height: 0px; overflow: hidden; padding: 0px; border: 0px none; margin: 0px;"><div id="MathJax_Font_Test" style="position: absolute; visibility: hidden; top: 0px; left: 0px; width: auto; min-width: 0px; max-width: none; padding: 0px; border: 0px none; margin: 0px; white-space: nowrap; text-align: left; text-indent: 0px; text-transform: none; line-height: normal; letter-spacing: normal; word-spacing: normal; font-size: 40px; font-weight: normal; font-style: normal; font-size-adjust: none; font-family: MathJax_Size1, sans-serif;"></div></div><div id="fb-root" class=" fb_reset"><div style="position: absolute; top: -10000px; width: 0px; height: 0px;"><div><iframe name="fb_xdm_frame_https" allowtransparency="true" allowfullscreen="true" scrolling="no" allow="encrypted-media" id="fb_xdm_frame_https" aria-hidden="true" title="Facebook Cross Domain Communication Frame" tabindex="-1" style="border: medium none;" src="%D0%97%D0%B0%D0%B4%D0%B0%D1%87%D0%B8%20-%20Codeforces_files/d_vbiawPdxB.htm" frameborder="0"></iframe></div><div></div></div></div></body></html>